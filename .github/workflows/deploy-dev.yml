name: Serverless deployment - dev stage

on:
  push:
    branches:
      - master
    tags:
      - 'dev-*'

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      STAGE: dev # also must have matching Portunus project/stage

    steps:
      - uses: actions/checkout@v1

      - name: Set Python version
        uses: actions/setup-python@v1
        with:
          python-version: '3.7'
          architecture: 'x64'

      # TODO: drop --pre once print-env (portunus) gets stable
      - run: python -m pip install print-env --pre

      - name: Set Node.js version
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Cache Node Modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ env.cache-name }}-
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-

      - run: npm install -g serverless
      - run: yarn install

      - name: Deploy through serverless
        run: |
          echo "PORTUNUS_TOKEN=${{ secrets.PORTUNUS_TOKEN_JWT }}/${GITHUB_REPOSITORY##*/}/${STAGE}" > .env
          yarn deploy --stage ${STAGE}
        env:
          # aws creds for deployment
          AWS_ACCESS_KEY_ID: ${{ secrets.aws_access_key_id }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.aws_secret_access_key }}
          # keywarden API version, passthrough
          KEYWARDEN_VER: ${{ github.sha }}

      - run: npm install -g @eqworks/notify

      - name: Notify on deployment status
        if: ${{ always() }}
        run: notify deployment ${GITHUB_REPOSITORY} --commit=${GITHUB_SHA} --stage=${STAGE} --status=${JOB_STATUS}
        env:
          SLACK_HOOK: ${{ secrets.CD_SLACK_HOOK }}
          JOB_STATUS: ${{ job.status }}
