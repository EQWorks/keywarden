service: keywarden

plugins:
  - serverless-domain-manager

custom:
  # this is [STAGE NAME]-env.yml, default to dev-env.yml
  envFile: ./${opt:stage, self:provider.stage}-env.yml
  customDomain:
    domainName: 'auth.eqworks.io'
    basePath: '${opt:stage, self:provider.stage}'
    stage: '${opt:stage, self:provider.stage}'
    certificateName: '*.eqworks.io'
    createRoute53Record: true

provider:
  name: aws
  runtime: nodejs6.10
  timeout: 30
  memorySize: 256
  environment: ${file(./${self:custom.envFile}):}
  vpc: # vpc-70658509 | EQ-DC-Tunnel
    securityGroupIds:
      - sg-081b437d # api-gateway-dc
    subnetIds:
      - subnet-b59ae9fe # EQ-DC-Lambda Public 1A
      - subnet-df12bb82 # EQ-DC-Lambda Public 1B
  iamRoleStatements:
    - Effect: Allow
      Action:
        - ses:SendEmail
        - ses:SendRawEmail
      Resource: arn:aws:ses:us-east-1:175398475102:*

functions:
  login:
    handler: api.login
    events:
      - http:
          path: login
          cors: true
          method: get
          request:
            parameters:
              querystrings:
                user: true
                redirect: false
  verify:
    handler: api.verify
    events:
      - http:
          path: verify
          cors: true
          method: get
          request:
            parameters:
              querystrings:
                user: true
                otp: true
  confirm:
    handler: api.confirm
    events:
      - http:
          path: confirm
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
              - eq-api-jwt
          method: get
          request:
            parameters:
              headers:
                eq-api-jwt: true
